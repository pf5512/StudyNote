= ListView使用 =

{{http:pic/listview.png}}

- 创建适配器，有几种常用适配器ArrayAdapter,SimpleAdapter,SimpleCursorAdapter
- 设置Adapter，将数据与各种类型的Adapter绑定。
- ListView对象调用setAdapter()方法与数据进行绑定。
- 追加Item被点击时候的处理，调用setOnItemClickListener()方法。
- 追加Item被选择时候的处理，调用setOnItemSelectedListener()方法。

== 相关类 ==
{{{class="brush: java"
import android.widget.ListView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.widget.SimpleAdapter;
import android.widget.SimpleCursorAdapter;
import android.widget.AdapterView;
}}}

== 例程源码(Java) --- 绑定ArrayAdapter ==
{{{class="brush: java"
ArrayAdapter<String> adapter = new ArrayAdapter<String>(
this, android.R.layout.simple_list_item_1);
 
adapter.add("red");
adapter.add("green");
adapter.add("blue");
  
ListView listView = (ListView) findViewById(R.id.listView);

listView.setAdapter(adapter);
}}}

== 例程源码(JAVA) --- 绑定SimpleCursorAdapter ==
{{{class="brush:java"
ListView listView = new ListView(this); 

Cursor c = getContentResolver().query(People.CONTENT_URI, null, null, null, null);         
startManagingCursor(c);

ListAdapter adapter = new SimpleCursorAdapter(this,    
         android.R.layout.simple_list_item_1,       // 布局文件,表示一列 
         c,                                         // 数据库光标 
         new String[] {People.NAME} ,               // 数据库的列名
         new int[] {android.R.id.text1});           // 映射到的视图 
         
listView.setAdapter(adapter);
}}}

== 例程源码(JAVA) --- 绑定SimpleAdapter ==
{{{class="brush:java"
@Override  
public void onCreate(Bundle savedInstanceState) {   
    super.onCreate(savedInstanceState);   
  
    List<Map<String, Object>> list;   
    list = getListForSimpleAdapter();   

    SimpleAdapter adapter = new SimpleAdapter(this, 
        list,                                                       // 数据源 
        R.layout.item,                                              // item布局文件 
        new String[] { "BigText", "LittleText", "img" },            // HashMap的Key
        new int[] { R.id.BigText, R.id.LittleText, R.id.img });     // 映射到的视图

    setListAdapter(adapter);   
}   

private List<Map<String, Object>> getListForSimpleAdapter() {   
    List<Map<String,Object>> list = new ArrayList<Map<String, Object>>(3);   
    
    Map<String, Object> map = new HashMap<String, Object>();   
    map.put("BigText", "Android");   
    map.put("LittleText", "Google phone."); 
    map.put("img", R.drawable.n); 
    list.add(map); 

    map = new HashMap<String, Object>();   
    map.put("BigText", "Lenovo");   
    map.put("LittleText", "Ophone");   
    map.put("img", R.drawable.o);   
    list.add(map);   

    map = new HashMap<String, Object>();   
    map.put("BigText", "Droid");   
    map.put("LittleText", "Motorola");   
    map.put("img", R.drawable.droid);   
    list.add(map);   

    return list; 
}
}}}

== 例程源码(JAVA) --- 处理事件响应 ==
{{{class="brush: java"
listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
	
    @Override
    public void onItemClick(
            AdapterView<?> parent,
            View view,
            int position,
            long id) {
        ListView listView = (ListView) parent;
        Log.v("Test", "id = " + id + "("
                + listView.getItemAtPosition(position).toString() + ")");
    }
});
	 
listView.setOnItemSelectedListener(new OnItemSelectedListener() {

    @Override
    public void onItemSelected(
            AdapterView<?> parent,
            View view,
            int position,
            long id) {
        ListView listView = (ListView) parent;
        Log.v("Test", "id = " + id + "("
                + listView.getSelectedItem().toString() + ")");
    }
    
    @Override
    public void onNothingSelected(AdapterView<?> parent) {
    }
});
}}}

== 例程源码(XML) -- ListView ==
{{{class="brush: xml"
<ListView android:id="@+id/listView"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent" />
}}}

== 例程源码(XML) -- item布局 ==
{{{class="brush: xml"
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:layout_width="fill_parent"
    android:layout_height="wrap_content"
    android:layout_gravity="left"
    >

    <TextView
        android:id="@+id/item_id1"
        android:text="item1"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content" />

    <TextView
        android:id="@+id/item_id2"
        android:text="item2"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content" />
</LinearLayout>
}}}

== 例程源码(XML) --- 带图片的item布局 ==
{{{class="brush:xml"
<?xml version="1.0" encoding="utf-8"?>    

<LinearLayout   
    xmlns:android="http://schemas.android.com/apk/res/android"  
    android:layout_width="wrap_content"  
    android:layout_height="wrap_content"  
    android:orientation="horizontal">   
 
    <ImageView android:id="@+id/img"  
    android:layout_width="wrap_content"  
    android:layout_height="wrap_content"  
    /> 
    
    <LinearLayout android:orientation="vertical"  
    android:layout_width="wrap_content"  
    android:layout_height="wrap_content"  
    >   
        <TextView android:id="@+id/BigText"  
        android:layout_width="wrap_content"  
        android:layout_height="wrap_content"  
        android:textColor="#FFFFFFFF"  
        android:textSize="30px"  
        />   
        
        <TextView android:id="@+id/LittleText"  
        android:layout_width="wrap_content"  
        android:layout_height="wrap_content"  
        android:textColor="#FFFFFFFF"  
        android:textSize="15px"  
        />   
    </LinearLayout>   
 
</LinearLayout>
}}}
