= 画面位置移动效果 =

%toc

== 相关类 ==
{{{class="brush:java"
import android.view.animation.TranslateAnimation;

import android.view.animation.Animation;
import android.view.animation.AnimationSet;
import android.view.animation.AnimationUtils;
}}}

== 基本处理流程 ==
- 定义动画资源的XML
- 通过AnimationUtils.loadAnimation()方法生成Animation对象
- 使用一个ViewGroup类对象作为动画的目标容器，并使用startAnimation()方法应用动画效果

== 示例代码 ==
=== anim/translate.xml ===
{{{class="brush:xml"
<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android">
    <translate
        android:fromXDelta="30" <!--动画开始时，X坐标的位置-->
        android:toXDelta="-80"  <!--动画结束时，X坐标的位置-->
        android:fromYDelta="30" <!--动画开始时，Y坐标的位置-->
        android:toYDelta="300"  <!--动画结束时，Y坐标的位置-->
        android:duration="2000" <!--动画持续时间-->
    />
</set>
}}}

=== 使用XML动画效果 ===
{{{class="brush:java"
// 加载XML资源
Animation mAnim = AnimationUtils.loadAnimation(context, R.anim.translate);
// 获取动画对象
ViewGroup view = (ViewGroup) findViewById(R.id.container);
// 开始动画
view.startAnimation(mAnim);
}}}

=== 在JAVA代码中定义 ===
{{{class="brush:java"
//第一个参数fromXDelta为动画起始时 X坐标上的移动位置   
//第二个参数toXDelta为动画结束时 X坐标上的移动位置      
//第三个参数fromYDelta为动画起始时Y坐标上的移动位置     
//第四个参数toYDelta为动画结束时Y坐标上的移动位置 
TranslateAnimation myAnimation_Translate = new TranslateAnimation(10, 100, 10, 100);

//设置时间持续时间为 2000毫秒
myAnimation_Translate.setDuration(2000);
}}}

