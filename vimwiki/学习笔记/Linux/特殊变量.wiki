= 特殊变量 =

%toc

== 特殊变量的含义 ==
=== MAKE ===
- MAKE”的值是“make”。例如“/bin/make”。

=== VPATH ===
- VPATH”变量所指定的是Makefile中所有文件的搜索路径,包括了规则的依赖文件和目标文件。
{{{class="brush:bash"
VPATH = src:../headers
}}}

=== $@ ===
- 表示所有规则的目标。

=== $% ===
- 当规则的目标文件是一个静态库文件时,代表静态库的一个成员名。如果目标不是静态库文件,其值为空。
{{{class="brush:bash"
# $%代表bar.o
foo.a:bar.o
    ar r $% $@
}}}

=== $^ ===
- 表示所有通过目录搜索得到的依赖文件的完整路径名(目录+一般文件名)列表。变量“$^”会去掉重复的依赖文件。

=== $< ===
- 表示规则中通过目录搜索得到的依赖文件列表的第一个依赖文件。

=== $? ===
- 表示比目标还要新的依赖文件列表。

=== $+ ===
- 类似“$^”,但是它保留了依赖文件中重复出现的文件。主要用在程序链接时库的交叉引用场合。

=== $* ===
- 在静态模式中匹配TARGET-PATTERN的模式匹配部分。
{{{class="brush:bash"
# $*匹配big和little
bigoutput littleoutput : %output : text.g
    generate text.g -$* > $@
}}}

=== $(@D) ===
- 表示目标文件的目录部分(不包括斜杠) 如果。 “$@” “dir/foo.o” 那么是, “$(@D)”的值为“dir”。如果“$@”不存在斜杠,其值就是“.”(当前目录)。

=== $(@F) ===
- 目标文件的完整文件名中除目录以外的部分(实际文件名)。如果“$@”为“dir/foo.o”,那么“$(@F)”只就是“foo.o”。“$(@F)”等价于函数“$(notdir$@)”。

=== $(*D) ===
- 代表目标“茎”中的目录部分

=== $(*F) ===
- 代表目标“茎”中的文件名部分

=== $(%D) ===
- 表示库文件成员“member”名中的目录部分。

=== $(%F) ===
- 表示库文件成员“member”名中的文件名部分

=== $(<D) ===
- 表示规则中第一个依赖文件的目录部分

=== $(<F) ===
- 表示规则中第一个依赖文件的文件名部分。

=== $(^D) ===
- 表示所有依赖文件的目录部分。

=== $(^F) ===
- 表示所有依赖文件的文件部分(不存在同一文件)。

=== $(+D) ===
- 表示所有依赖文件的目录部分。

=== $(+F) ===
- 表示所有依赖文件的文件部分(可存在重复文件)。

=== $(?D) ===
- 表示被更新的依赖文件的目录部分。

=== $(?F) ===
- 表示被更新的依赖文件的文件名部分。

=== .PHONY ===
- “.PHONY”的所有的依赖被作为伪目标。伪目标是这样一个目标:当使用make命令行指定此目标时,这个目标所在规则定义的命令，无论目标文件是否存在都会被无条件执行。

=== FORCE ===
- 表示该目标总是被执行，而不论其有没有命令或是依赖。
{{{class="brush:bash"
clean: FORCE
    rm $(objects)
FORCE:
}}}

=== .SUFFIXES ===
- 特殊目标“SUFFIXES”的所有依赖指出了一系列在后缀规则中需要检查的后缀名(就是当前make需要处理的后缀)

=== .DEFAULT ===
- 目标“.DEFAULT”所在规则定义的命令,被用在重建那些没有具体规则的目标(明确规则和隐含规则)。就是说一个文件作为某个规则的依赖,但却不是另外一个规则的目标时。Make 程序无法找到重建此文件的规则,此种情况时就执行“.DEFAULT”所指定的命令。

=== .PRECIOUS ===
- 目标“.PRECIOUS”的所有依赖文件在make过程中会被特殊处理:当命令在执行过程中被中断时,make不会删除它们。而且如果目标的依赖文件是中间过程文件,同样这些文件不会被删除。这一点目标“.PRECIOUS”和目标“.SECONDAY”实现的功能相同。

=== .INTERMEDIATE ===
- 目标“.INTERMEDIATE”的依赖文件在make时被作为中间过程文件对待。没有任何依赖文件的目标“.INTERMEDIATE”没有意义。

=== .SECONDARY ===
- 目标“.SECONDARY”的依赖文件被作为中间过程文件对待。但这些文件不会被自动删除。

=== .DELETE_ON_ERROR ===
- 如果在Makefile中存在特殊目标“.DELETE_ON_ERROR”,make在执行过程中,如果规则的命令执行错误,将删除已经被修改的目标文件。

=== .IGNORE ===
- 如果给目标“.IGNORE”指定依赖文件,则忽略创建这个文件所执行命令的错误。给此目标指定命令是没有意义的。当此目标没有依赖文件时,将忽略所有命令执行的错误。

=== .LOW_RESOLUTION_TIME ===
- 目标“.LOW_RESOLUTION_TIME”的依赖文件被 make 认为是低分辨率时间戳文件。

=== .SILENT ===
- 目标“.SILENT”的依赖列表中的文件,make 在创建这些文件时,不打印出重建此文件所执行的命令。

=== .EXPORT_ALL_VARIABLES ===
- 此目标应该作为一个简单的没有依赖的目标,它的功能含义是将之后所有的变量传递给子make进程。

=== .EXPORT_ALL_VARIABLES ===
- 此目标应该作为一个简单的没有依赖的目标,它的功能含义是将之后所有的变量传递给子make进程。

=== .NOTPARALLEL ===
- Makefile 中,如果出现目标“.NOPARALLEL”,则所有命令按照串行方式执行,即使存在make的命令行参数“-j”。



